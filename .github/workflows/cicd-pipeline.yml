name: CI/CD Pipeline

on:
  push:
    branches:
      - main
    paths:
      - 'ui/**'
      - 'api/**'
      - 'kubernetes/**'
      - '.github/workflows/**'
  pull_request:
    branches:
      - main
    paths:
      - 'ui/**'
      - 'api/**'
      - 'kubernetes/**'
      - '.github/workflows/**'

jobs:
  # Continuous Integration job
  build:
    runs-on: ubuntu-24.04
    
    outputs:
      ui: ${{ steps.filter.outputs.ui }}
      api: ${{ steps.filter.outputs.api }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Filter paths
      uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: |
          ui:
            - 'ui/**'
          api:
            - 'api/**'
          kubernetes:
            - 'kubernetes/**'
          github_workflows:
            - '.github/workflows/**'

    - name: Print Changed Directories
      run: |
        if [ "${{ steps.filter.outputs.ui }}" == "true" ]; then
          echo "The 'ui' directory was changed."
        fi
        if [ "${{ steps.filter.outputs.api }}" == "true" ]; then
          echo "The 'api' directory was changed."
        fi
        if [ "${{ steps.filter.outputs.kubernetes }}" == "true" ]; then
          echo "The 'kubernetes' directory was changed."
        fi
        if [ "${{ steps.filter.outputs.github_workflows }}" == "true" ]; then
          echo "The '.github/workflows' directory was changed."
        fi

    - name: Print Environment Variables
      run: |
        echo "UI changes: ${{ steps.filter.outputs.ui }}"
        echo "API changes: ${{ steps.filter.outputs.api }}"

    # Log in to DockerHub
    - name: Log in to DockerHub
      if: ${{ steps.filter.outputs.ui == 'true' || steps.filter.outputs.api == 'true' }}
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Conditionally build and push frontend image
    - name: Build and Push Frontend Image
      if: ${{ steps.filter.outputs.ui == 'true' }}
      run: |
        docker build -f ui/Dockerfile -t alexandrebo/3-tier-application-frontend:${{ github.sha }} ./ui
        docker push alexandrebo/3-tier-application-frontend:${{ github.sha }}

    # Conditionally build and push backend image
    - name: Build and Push Backend Image
      if: ${{ steps.filter.outputs.api == 'true' }}
      run: |
        docker build -f api/Dockerfile -t alexandrebo/3-tier-application-backend:${{ github.sha }} ./api
        docker push alexandrebo/3-tier-application-backend:${{ github.sha }}

  # Continuous Delivery job
  deploy:
    needs: build
    runs-on: ubuntu-24.04

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Update kubeconfig
      run: aws eks update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }} --region ${{ secrets.AWS_REGION }}
    
    - name: Check kubectl version
      run: kubectl version --client 

    - name: Print Environment Variables
      run: |
        echo "needs.build.outputs.ui = ${{ needs.build.outputs.ui }}"
        echo "needs.build.outputs.api = ${{ needs.build.outputs.api }}"

    - name: Update image tag and commit changes to Kubernetes YAML files
      if: ${{ needs.build.outputs.ui == 'true' || needs.build.outputs.api == 'true' }}
      run: |
        git config --local user.name "GitHub Actions"
        git config --local user.email "actions@github.com"

        # Update and stage the frontend deployment YAML
        if [ "${{ needs.build.outputs.ui }}" == "true" ]; then
          sed -i "s|image: alexandrebo/3-tier-application-frontend:.*|image: alexandrebo/3-tier-application-frontend:${{ github.sha }}|" ./kubernetes/frontend-deployment-service.yaml
          echo "Frontend image tag updated in frontend-deployment-service.yaml."
          git add ./kubernetes/frontend-deployment-service.yaml
        fi

        # Update and stage the backend deployment YAML
        if [ "${{ needs.build.outputs.api }}" == "true" ]; then
          sed -i "s|image: alexandrebo/3-tier-application-backend:.*|image: alexandrebo/3-tier-application-backend:${{ github.sha }}|" ./kubernetes/backend-deployment-service.yaml
          echo "Backend image tag updated in backend-deployment-service.yaml."
          git add ./kubernetes/backend-deployment-service.yaml
        fi

        # Debugging: Show the current status and staged changes
        git status

        git commit -m "update Docker image tags for frontend and/or backend"
        git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }} HEAD:main
        echo "New image(s) commited to main."
        
    - name: Deploy to EKS
      run: |
        kubectl apply -f ./kubernetes/backend-deployment-service.yaml
        kubectl apply -f ./kubernetes/database-deployment-service.yaml
        kubectl apply -f ./kubernetes/frontend-configmap.yaml
        kubectl apply -f ./kubernetes/frontend-deployment-service.yaml
