name: CI/CD Pipeline

on:
  push:
    branches:
      - main
    paths:
      - 'ui/**'
      - 'api/**'
      - 'kubernetes/**'
      - '.github/workflows/**'
  pull_request:
    branches:
      - main
    paths:
      - 'ui/**'
      - 'api/**'
      - 'kubernetes/**'
      - '.github/workflows/**'

jobs:
  # Continuous Integration job
  build:
    runs-on: ubuntu-24.04
    
    outputs:
      ui: ${{ steps.set-changes.outputs.ui }}
      api: ${{ steps.set-changes.outputs.api }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set Changed Paths
      id: set-changes
      run: |
        # Check for changes in specific directories
        if git diff --name-only ${{ github.base_ref }} ${{ github.head_ref }} | grep -q '^ui/'; then
          echo "ui=true" >> $GITHUB_ENV
          echo "::set-output name=ui::true"
        else
          echo "ui=false" >> $GITHUB_ENV
          echo "::set-output name=ui::false"
        fi

        if git diff --name-only ${{ github.base_ref }} ${{ github.head_ref }} | grep -q '^api/'; then
          echo "api=true" >> $GITHUB_ENV
          echo "::set-output name=api::true"
        else
          echo "api=false" >> $GITHUB_ENV
          echo "::set-output name=api::false"
        fi
        # Export as outputs

    - name: Print Environment Variables
      run: |
        echo "env.ui = ${{ env.ui }}"
        echo "env.api = ${{ env.api }}"

    # Log in to DockerHub
    - name: Log in to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Conditionally build and push frontend image
    - name: Build and Push Frontend Image
      if: env.ui == 'true'
      run: |
        docker build -f ui/Dockerfile -t alexandrebo/3-tier-application-frontend:${{ github.sha }} ./ui
        docker push alexandrebo/3-tier-application-frontend:${{ github.sha }}

     # Conditionally build and push backend image
    - name: Build and Push Backend Image
      if: env.api == 'true'
      run: |
        docker build -f api/Dockerfile -t alexandrebo/3-tier-application-backend:${{ github.sha }} ./api
        docker push alexandrebo/3-tier-application-backend:${{ github.sha }}

  # Continuous Delivery job
  deploy:
    needs: build
    runs-on: ubuntu-24.04

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    # Update kubeconfig and deploy to EKS
    - name: Update kubeconfig
      run: aws eks update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }} --region ${{ secrets.AWS_REGION }}
    
    - name: Check kubectl version
      run: kubectl version --client 

    - name: Print Environment Variables
      run: |
        echo "needs.build.outputs.ui = ${{ needs.build.outputs.ui }}"
        echo "needs.build.outputs.api = ${{ needs.build.outputs.api }}"

    - name: Update Frontend Deployment Image
      if: ${{ needs.build.outputs.ui == 'true' }}
      run: |
        sed -i "s|image: alexandrebo/3-tier-application-frontend:.*|image: alexandrebo/3-tier-application-frontend:${{ github.sha }}|" ./kubernetes/frontend-deployment-service.yaml

    - name: Update Backend Deployment Image
      if: ${{ needs.build.outputs.api == 'true' }}
      run: |
        sed -i "s|image: alexandrebo/3-tier-application-backend:.*|image: alexandrebo/3-tier-application-backend:${{ github.sha }}|" ./kubernetes/backend-deployment-service.yaml

    - name: Deploy to EKS
      run: |
        kubectl apply -f ./kubernetes/backend-deployment-service.yaml
        kubectl apply -f ./kubernetes/database-deployment-service.yaml
        kubectl apply -f ./kubernetes/frontend-configmap.yaml
        kubectl apply -f ./kubernetes/frontend-deployment-service.yaml